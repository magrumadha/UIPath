<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1041,2901" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:uasb="clr-namespace:UiPath.Activities.System.Binding;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ueabf="clr-namespace:UiPath.Excel.Activities.Business.Filter;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="48">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Activities.System.Binding</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Presentations</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Presentations</AssemblyReference>
      <AssemblyReference>UiPath.Presentations.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <ueab:SequenceX sap:VirtualizedContainerService.HintSize="508,2836" sap2010:WorkflowViewState.IdRef="SequenceX_1">
    <ueab:SequenceX.Variables>
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Project_Notebook.xlsx&quot;,visible:=True,autoSave:=False,createNew:=True,readOnly:=False,isWorkspace:=True)]" Name="Notes" />
      <Variable x:TypeArguments="uasb:BindingsRepository" Default="[new UiPath.Activities.System.Binding.BindingsRepository()]" Name="Saved" />
      <Variable x:TypeArguments="ue:IWorkbookQuickHandle" Default="[new WorkbookQuickHandle(workbookPath:=&quot;Input\MOCK_DATA.xlsx&quot;,autoSave:=True,readOnly:=False,isWorkspace:=False)]" Name="MOCK_DATA" />
    </ueab:SequenceX.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CopyFile ContinueOnError="{x:Null}" Destination="Output\Final Presentation.pptx" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="466,156" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="Input\Presentation Template.pptx">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CopyFile>
    <ui:PowerPointApplicationScope Password="{x:Null}" CreateIfNotExists="True" DisplayName="Use PowerPoint Presentation" sap:VirtualizedContainerService.HintSize="466,2550" sap2010:WorkflowViewState.IdRef="PowerPointApplicationScope_1" PresentationPath="Output\Final Presentation.pptx">
      <ui:PowerPointApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:IPresentationQuickHandle">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IPresentationQuickHandle" Name="PowerPoint" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="454,2299" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:FindAndReplaceTextInPresentation NumberOfReplacements="{x:Null}" DisplayName="Replace Text in Presentation" sap:VirtualizedContainerService.HintSize="412,204" sap2010:WorkflowViewState.IdRef="FindAndReplaceTextInPresentation_1" MatchCase="True" Presentation="[PowerPoint]" ReplaceAll="True" ReplaceWith="[MOCK_DATA.Sheet(&quot;MOCK_DATA&quot;).Cell(&quot;A2&quot;)]" SearchFor="&lt;PARTNER_NAME&gt;" WholeWordsOnly="False" />
            <ueab:CopyChartToClipboardX FilePath="{x:Null}" Action="CopyToClipboard" Chart="[MOCK_DATA.Sheet(&quot;Charts&quot;).Chart(&quot;New Business/Upsell&quot;)]" DisplayName="Get Excel Chart" sap:VirtualizedContainerService.HintSize="412,88" sap2010:WorkflowViewState.IdRef="CopyChartToClipboardX_1" ReplaceFile="True" />
            <ui:PasteIntoSlide Height="{x:Null}" Left="{x:Null}" Top="{x:Null}" Width="{x:Null}" DisplayName="Paste Item into Slide" sap:VirtualizedContainerService.HintSize="412,184" sap2010:WorkflowViewState.IdRef="PasteIntoSlide_1" Presentation="[PowerPoint]" ShapeName="New Business/Upsell Chart PH" SlideIndex="[1]" />
            <ueab:CopyChartToClipboardX FilePath="{x:Null}" Action="CopyToClipboard" Chart="[MOCK_DATA.Sheet(&quot;Charts&quot;).Chart(&quot;Quarter Overview&quot;)]" DisplayName="Get Excel Chart" sap:VirtualizedContainerService.HintSize="412,88" sap2010:WorkflowViewState.IdRef="CopyChartToClipboardX_2" ReplaceFile="True" />
            <ui:PasteIntoSlide Height="{x:Null}" Left="{x:Null}" Top="{x:Null}" Width="{x:Null}" DisplayName="Paste Item into Slide" sap:VirtualizedContainerService.HintSize="412,184" sap2010:WorkflowViewState.IdRef="PasteIntoSlide_2" Presentation="[PowerPoint]" ShapeName="Quarter Overview Chart PH" SlideIndex="[1]" />
            <ueab:FilterX ClearFilter="False" ColumnName="Type" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="412,167" sap2010:WorkflowViewState.IdRef="FilterX_1" Range="[MOCK_DATA.Sheet(&quot;MOCK_DATA&quot;)]">
              <ueab:FilterX.FilterArgument>
                <ueabf:FilterArgument Mode="Basic">
                  <ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:AdvancedFilterArgument LogicalOperator="And">
                      <ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterCondition Operator="NONE">
                          <ueabf:AdvancedFilterCondition.Value>
                            <InArgument x:TypeArguments="x:String" />
                          </ueabf:AdvancedFilterCondition.Value>
                        </ueabf:AdvancedFilterCondition>
                      </ueabf:AdvancedFilterArgument.Condition1>
                      <ueabf:AdvancedFilterArgument.Condition2>
                        <ueabf:AdvancedFilterCondition Operator="NONE">
                          <ueabf:AdvancedFilterCondition.Value>
                            <InArgument x:TypeArguments="x:String" />
                          </ueabf:AdvancedFilterCondition.Value>
                        </ueabf:AdvancedFilterCondition>
                      </ueabf:AdvancedFilterArgument.Condition2>
                    </ueabf:AdvancedFilterArgument>
                  </ueabf:FilterArgument.AdvancedFiltersArgument>
                  <ueabf:FilterArgument.BasicFiltersArgument>
                    <ueabf:BasicFilterArgument>
                      <ueabf:BasicFilterArgument.BasicFilters>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">New Business</InArgument>
                        </scg:List>
                      </ueabf:BasicFilterArgument.BasicFilters>
                    </ueabf:BasicFilterArgument>
                  </ueabf:FilterArgument.BasicFiltersArgument>
                </ueabf:FilterArgument>
              </ueab:FilterX.FilterArgument>
            </ueab:FilterX>
            <ui:ReplaceShapeWithDataTable AppendMode="CreateNewTable" DisplayName="Add Data Table to Slide" sap:VirtualizedContainerService.HintSize="412,303" sap2010:WorkflowViewState.IdRef="ReplaceShapeWithDataTable_1" Presentation="[PowerPoint]" ShapeName="Table Placeholder" SlideIndex="[2]" StartColumn="1" StartRow="0" TableToInsert="[MOCK_DATA.Sheet(&quot;MOCK_DATA&quot;).Range(&quot;B:G&quot;)]" />
            <ueab:FilterX ClearFilter="False" ColumnName="Type" DisplayName="Filter" HasHeaders="True" sap:VirtualizedContainerService.HintSize="412,167" sap2010:WorkflowViewState.IdRef="FilterX_2" Range="[MOCK_DATA.Sheet(&quot;MOCK_DATA&quot;)]">
              <ueab:FilterX.FilterArgument>
                <ueabf:FilterArgument Mode="Basic">
                  <ueabf:FilterArgument.AdvancedFiltersArgument>
                    <ueabf:AdvancedFilterArgument LogicalOperator="And">
                      <ueabf:AdvancedFilterArgument.Condition1>
                        <ueabf:AdvancedFilterCondition Operator="NONE">
                          <ueabf:AdvancedFilterCondition.Value>
                            <InArgument x:TypeArguments="x:String" />
                          </ueabf:AdvancedFilterCondition.Value>
                        </ueabf:AdvancedFilterCondition>
                      </ueabf:AdvancedFilterArgument.Condition1>
                      <ueabf:AdvancedFilterArgument.Condition2>
                        <ueabf:AdvancedFilterCondition Operator="NONE">
                          <ueabf:AdvancedFilterCondition.Value>
                            <InArgument x:TypeArguments="x:String" />
                          </ueabf:AdvancedFilterCondition.Value>
                        </ueabf:AdvancedFilterCondition>
                      </ueabf:AdvancedFilterArgument.Condition2>
                    </ueabf:AdvancedFilterArgument>
                  </ueabf:FilterArgument.AdvancedFiltersArgument>
                  <ueabf:FilterArgument.BasicFiltersArgument>
                    <ueabf:BasicFilterArgument>
                      <ueabf:BasicFilterArgument.BasicFilters>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                          <InArgument x:TypeArguments="x:String">Upsell</InArgument>
                        </scg:List>
                      </ueabf:BasicFilterArgument.BasicFilters>
                    </ueabf:BasicFilterArgument>
                  </ueabf:FilterArgument.BasicFiltersArgument>
                </ueabf:FilterArgument>
              </ueab:FilterX.FilterArgument>
            </ueab:FilterX>
            <ui:ReplaceShapeWithDataTable AppendMode="CreateNewTable" DisplayName="Add Data Table to Slide" sap:VirtualizedContainerService.HintSize="412,303" sap2010:WorkflowViewState.IdRef="ReplaceShapeWithDataTable_2" Presentation="[PowerPoint]" ShapeName="Table Placeholder" SlideIndex="[3]" StartColumn="1" StartRow="0" TableToInsert="[MOCK_DATA.Sheet(&quot;MOCK_DATA&quot;).Range(&quot;B:G&quot;)]" />
            <ui:SavePresentationAsPdf DisplayName="Save Presentation as PDF" sap:VirtualizedContainerService.HintSize="412,161" sap2010:WorkflowViewState.IdRef="SavePresentationAsPdf_1" PdfPath="Output\Final Presentation.pdf" Presentation="[PowerPoint]" />
          </Sequence>
        </ActivityAction>
      </ui:PowerPointApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:PowerPointApplicationScope>
  </ueab:SequenceX>
</Activity>